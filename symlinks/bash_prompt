#!/bin/bash

function add_node_modules_to_path() {
    # this function is not goint to be the most intelligent thing in entire world
    # but it'll work for me
    # TODO: what should happen if there are multiple node_modules directories in tree

    OLD_IFS=$IFS
    IFS=":"
    local updated_paths=""

    for single_path in $PATH; do
        if [[ ! $single_path =~ (:)*"node_modules"(:)* ]]; then
            updated_paths="$updated_paths:$single_path"
            continue;
        fi

        local path_with_modules=${single_path%%"/node_modules/.bin"}
        if [[ $PWD =~ ^$path_with_modules* ]]; then
            updated_paths="$single_path:$updated_paths"
        fi
    done

    IFS=$OLD_IFS

    local modules_path="$PWD/node_modules/.bin"
    if [[ -d $modules_path ]] && [[ ! $PATH =~ (:)*$modules_path(:)* ]]; then
        updated_paths="$modules_path:$updated_paths"
    fi

    PATH=$updated_paths
    export PATH
}

function _bash_prompt_get_git_state() {
    local GIT_STATE=""
    if [[ -n "$(git symbolic-ref HEAD 2>/dev/null)" ]]; then
        if [[ -n $(git status -s 2>/dev/null |grep -v ^# |grep -v "working directory clean") ]]; then
            GIT_STATE="$(tput setaf 1)âœ—"
        else
            GIT_STATE="$(tput setaf 2)âœ“"
        fi

        local GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)

        GIT_STATE+="[git:${GIT_BRANCH}]$(tput sgr0)"
    fi

    echo -e " ${GIT_STATE}"
}

function _bash_prompt_get_user_color() {
    local user_color=$(tput setaf 6)

    if [[ `whoami` == "root" ]]; then
        user_color=$(tput setaf 1)
    elif [[ `whoami` != "root" && `uname` == "Linux" ]]; then
        user_color=$(tput setaf 3)
    fi

    echo -e ${user_color}
}

function _bash_prompt_get_virtualenv() {
    local VIRTUALENV_PROMPT=""

    if [[ -n $VIRTUAL_ENV ]]; then
        VIRTUALENV_PROMPT="$(tput setab 5)[venv:$(echo ${VIRTUAL_ENV} | sed "s|${HOME}|~|")]$(tput sgr0)"
    fi

    echo -e ${VIRTUALENV_PROMPT}
}

function _bash_prompt_get_host_user_path() {
    local CWD=$(echo $(pwd) | sed "s|${HOME}|~|")
    local HOSTNAME=$(hostname)
    local USERNAME=$(whoami)

    local USER_COLOR=$(_bash_prompt_get_user_color)

    echo -e "${USER_COLOR}[ðŸ‘» ${USERNAME}]$(tput sgr0) ${HOSTNAME} in $(tput setaf 6)${CWD}$(tput sgr0)"
}

function _bash_prompt_command() {
    add_node_modules_to_path

    local COLUMNS=$(tput cols)

    local PROMPT=$(_bash_prompt_get_host_user_path)
    local PROMPT_SIZE=$(echo -e ${PROMPT} | perl -pe 's/\e\[?.*?[\@-~]//g' | awk ' { print length } ')

    local GIT_STATE=$(_bash_prompt_get_git_state)
    local GIT_STATE_SIZE=$(echo -e ${GIT_STATE} | perl -pe 's/\e\[?.*?[\@-~]//g' | awk ' { print length } ')

    local VIRTUALENV_PROMPT=$(_bash_prompt_get_virtualenv)
    local VIRTUALENV_PROMPT_SIZE=$(echo ${VIRTUALENV_PROMPT} | perl -pe 's/\e\[?.*?[\@-~]//g' | awk ' { print length } ')

    local spacing_witdth
    ((spacing_witdth=${COLUMNS}-${GIT_STATE_SIZE}-${PROMPT_SIZE}-${VIRTUALENV_PROMPT_SIZE}))

    local SPACING=""
    for i in $(seq 1 1 ${spacing_witdth}); do
        SPACING+=" "
    done

    PS1=${PROMPT}
    PS1+="${SPACING}"
    PS1+=${VIRTUALENV_PROMPT}${GIT_STATE}
    PS1+="\nâ†’ "
}

PROMPT_COMMAND=_bash_prompt_command
