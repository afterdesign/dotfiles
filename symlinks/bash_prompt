# more info: http://en.wikipedia.org/wiki/Tput
reset_color=$(tput sgr0)
green=$(tput setaf 2)
red=$(tput setaf 1)
cyan=$(tput setaf 6)

function put_spacing() {
    local lpwd=$(get_pwd)
    local termwidth
    local columns=$(tput cols)
    local git_data=$(git_prompt_info)

    ((termwidth=${columns}-${#git_data}-${#lpwd}-25))
    local spacing=""

    for ((i=0; i<$termwidth; i++)); do
        spacing="${spacing} "
    done

    echo -e "$spacing"
}

function scm_prompt_info {
    local scm="NONE"

    if [[ -f .git/HEAD ]]; then
        scm="git"
    elif [[ -n "$(git symbolic-ref HEAD 2> /dev/null)" ]]; then
        scm="git"
    fi

    if [[ $scm == "git" ]]; then
        git_prompt_info
    fi
}

function git_prompt_info {
    local git_state="${green}✓"
    if [[ -n $(git status -s 2> /dev/null |grep -v ^# |grep -v "working directory clean") ]]; then
    git_state="${red}✗"
    fi

    local git_branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)

    echo -e "$git_state[git:$git_branch]"
}

function get_pwd() {
   echo "${PWD/$HOME/~}"
}

function get_user() {
    if [[ `whoami` == "root" ]]; then
        user_color=$red
    else
        user_color=$cyan
    fi
}

function prompt_command() {
    get_user
    PS1="$user_color[@\u]$reset_color \h ${reset_color}in ${cyan}\w ${reset_color}$(put_spacing)$(scm_prompt_info)${reset_color}\n→ "
}

PROMPT_COMMAND=prompt_command
